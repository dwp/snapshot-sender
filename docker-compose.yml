version: '3'

services:
  hbase:
    image: harisekhon/hbase:1.4
    ports:
      - 9090:9090
      - 9095:9095
      - 2181:2181
      - 16201:16201
    container_name: hbase

  s3-dummy:
    image: localstack/localstack:latest
    ports:
      - '4563-4584:4563-4584'
      - '8055:8080'
    container_name: s3-dummy
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/opt/s3/data

  s3-bucket-provision:
    image: s3-bucket-provision
    build:
      context: resources
      dockerfile: Dockerfile_s3_bucket_provision
    container_name: s3-bucket-provision
    depends_on:
      - s3-dummy
    environment:
      - S3_SERVICE_ENDPOINT=http://s3-dummy:4572
      - AWS_DEFAULT_REGION=eu-west-2
      - AWS_ACCESS_KEY_ID=DummyKey
      - AWS_SECRET_ACCESS_KEY=DummySecret
      - S3_BUCKET=demobucket

  hbase-populate:
    image: hbase-populate
    build:
      context: resources
      dockerfile: Dockerfile_populate_hbase
    container_name: hbase-populate
    depends_on:
      - hbase
      - dks-standalone-http
    volumes:
      - shared-volume:/opt/snapshot-sender/data
    command: >-
      --data-key-service http://dks-standalone-http:8080/datakey
      --zookeeper-quorum hbase
      --dump-table-contents
      --completed-flag /opt/snapshot-sender/data/ready
      --remove-output-file data/ucdata-file-output.txt
      --data-table-name ucfs-data
      --topics-table-name ucfs-topics
      --test-configuration-file test-config.json

  hbase-to-mongo-export:
    image: hbase-to-mongo-export
    build:
      context: resources
      dockerfile: Dockerfile_htme
    container_name: hbase-to-mongo-export
    depends_on:
      - hbase
      - dks-standalone-https
      - s3-dummy
    volumes:
      - shared-volume:/opt/snapshot-sender/data
    command: >-
      --hbase.zookeeper.quorum=hbase
      --data.table.name=ucfs-data
      --column.family=topic
      --topic.name=db.core.addressDeclaration
      --data.ready.flag.location=/opt/snapshot-sender/data/ready
      --data.key.service.url=https://dks-standalone-https:8443
      --aws.region=eu-west-2
      --s3.bucket=demobucket
      --s3.prefix.folder=test/output
      --s3.service.endpoint=http://s3-dummy:4572
      --s3.access.key=DummyKey
      --s3.secret.key=DummySecret

  snapshot-sender:
    image: snapshot-sender
    build:
      context: .
    container_name: snapshot-sender
    depends_on:
      - dks-standalone-https
      - mock-nifi
    command: >-
      --spring.profiles.active=httpWriter,secureHttpClient,batchRun,S3SourceData,dummyS3Client
      --aws.region=eu-west-2
      --data.key.service.url=https://dks-standalone-https:8443
      --nifi.url=https://mock-nifi:5443/collections
      --s3.access.key=DummyKey
      --s3.bucket=demobucket
      --s3.prefix.folder=test/output/
      --s3.htme.root.folder=test
      --s3.status.folder=status
      --s3.secret.key=DummyKey
      --s3.service.endpoint=http://s3-dummy:4572
      --identity.key.password=changeit
      --identity.keystore=snapshot-sender-keystore.jks
      --identity.store.alias=cid
      --identity.store.password=changeit
      --trust.keystore=snapshot-sender-truststore.jks
      --trust.store.password=changeit

  dks-standalone-http:
    image: dks-standalone-http
    ports:
      - 8090:8080
      - 8100:8443
    build:
      context: resources
      dockerfile: Dockerfile_dks
    container_name: dks-standalone-http
    environment:
      - SPRING_PROFILES_ACTIVE=STANDALONE,INSECURE

  dks-standalone-https:
    image: dks-standalone-https
    ports:
      - 8091:8443
      - 8101:8080
    build:
      context: resources
      dockerfile: Dockerfile_dks
    container_name: dks-standalone-https
    environment:
      - SPRING_PROFILES_ACTIVE=STANDALONE,SECURE
      - SPRING_CONFIG_LOCATION=application-dks-secure.properties

  mock-nifi:
    image: mock-nifi
    build:
      context: resources
      dockerfile: Dockerfile_mock_nifi
    ports:
      - "5443:5443"
    volumes:
      - shared-volume:/data/output
    container_name: mock-nifi
    environment:
      KEYSTORE_PASSWORD: changeit
      TRUSTSTORE_PASSWORD: changeit
      TLS_KEY_PASSWORD: changeit
      TLS_KEY_ID: cid
      TLS_CERT_ID: self
      TLS_CACERT_ID: mock-nifi

  snapshot-sender-itest:
    image: snapshot-sender-itest
    build:
      context: resources
      dockerfile: Dockerfile_itest
    container_name: snapshot-sender-itest
    volumes:
      - shared-volume:/data/output:ro
    command: "-file /data/output/db.core.addressDeclaration/db.core.addressDeclaration-000001.txt.bz2 \
              -timestamp 10 \
              -linecount 7"

volumes:
  shared-volume:
